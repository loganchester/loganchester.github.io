{"version":3,"file":"component---src-pages-blogs-index-tsx-da8a20a73b22914339d0.js","mappings":"0MAEO,MAAMA,EAAe,CACxB,CACIC,GAAI,cACJC,MAAO,cACPC,IAAK,uBAET,CACIF,GAAI,QACJC,MAAO,QACPC,IAAK,yBAET,CACIF,GAAI,UACJC,MAAO,UACPC,IAAK,2BAET,CACIF,GAAI,cACJC,MAAO,cACPC,IAAK,sBAET,CACIF,GAAI,cACJC,MAAO,cACPC,IAAK,uBAET,CACIF,GAAI,UACJC,MAAO,UACPC,IAAK,2BAET,CACIF,GAAI,eACJC,MAAO,iBACPC,IAAK,iC,wBCDb,MAzBmCC,IAAc,IAAb,KAAEJ,GAAM,EACxC,OACIK,EAAAA,cAACC,EAAAA,EAAM,CAACJ,MAAM,SACVG,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,WACVC,EACIC,MAAK,CAACC,EAAGC,IAAMD,EAAET,GAAGW,cAAcD,EAAEV,MACpCY,KAAIC,IAAQ,MACT,MAAMC,EAAaf,EAAKgB,QAAQC,MAAMC,MAAMC,GAAcA,EAAKC,KAAKC,aAAaC,SAASR,EAAKb,MAC/F,OAAOI,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,4BAClBF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,QACXF,EAAAA,cAACkB,EAAAA,EAAW,CAACC,MAAOT,SAAgB,QAAN,EAAVA,EAAYK,YAAI,WAAN,EAAVK,EAAkBC,mBAAmB,GAAGC,gBAAiBC,IAAG,WAAad,EAAKZ,QAClGG,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,sBACXF,EAAAA,cAAAA,KAAAA,CAAIE,UAAU,2BACTO,EAAKZ,OAEVG,EAAAA,cAACwB,EAAAA,GAAI,CAACC,GAAE,UAAYhB,EAAKb,GAAMM,UAAU,2BAA0B,UAGzE,KAGb,C","sources":["webpack://loganchester.github.io/./src/data/blogs/index.ts","webpack://loganchester.github.io/./src/pages/blogs/index.tsx"],"sourcesContent":["import { Blog } from \"../../types/blogs\";\n\nexport const data: Blog[] = [\n    {\n        id: \"new-zealand\",\n        title: \"New Zealand\",\n        img: \"nz/cover-photo.jpeg\",\n    },\n    {\n        id: \"china\",\n        title: \"China\",\n        img: \"china/cover-photo.jpg\",\n    },\n    {\n        id: \"wyoming\",\n        title: \"Wyoming\",\n        img: \"wyoming/cover-photo.JPG\",\n    },\n    {\n        id: \"north-korea\",\n        title: \"North Korea\",\n        img: \"nk/cover-photo.jpg\",\n    },\n    {\n        id: \"philippines\",\n        title: \"Philippines\",\n        img: \"php/cover-photo.jpg\",\n    },\n    {\n        id: \"ukraine\",\n        title: \"Ukraine\",\n        img: \"ukraine/cover-photo.jpg\",\n    },\n    {\n        id: \"cuba-bermuda\",\n        title: \"Cuba & Bermuda\",\n        img: \"cuba-bermude/cover-photo.jpg\",\n    }\n]","import { Link, graphql } from \"gatsby\";\nimport React from \"react\";\nimport { data as blogs } from \"../../data/blogs\";\nimport Layout from \"../../components/layout\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\ntype Props = {\n    data: any;\n}\n\nconst BlogsPage: React.FC<Props> = ({ data }) => {\n    return (\n        <Layout title=\"Blogs\">\n            <div className=\"row g-3\">\n                {blogs\n                    .sort((a, b) => a.id.localeCompare(b.id))\n                    .map(blog => {\n                        const coverPhoto = data.allFile.edges.find((edge: any) => edge.node.relativePath.includes(blog.id));\n                        return <div className=\"col-12 col-md-6 col-xl-4\">\n                            <div className=\"card\">\n                                <GatsbyImage image={coverPhoto?.node?.childrenImageSharp[0].gatsbyImageData} alt={`Image - ${blog.title}`} />\n                                <div className=\"card-body bg-light\">\n                                    <h5 className=\"card-title text-primary\">\n                                        {blog.title}\n                                    </h5>\n                                    <Link to={`/blogs/${blog.id}`} className=\"btn btn-outline-primary\">View</Link>\n                                </div>\n                            </div>\n                        </div>\n                    })}\n            </div>\n        </Layout>\n    )\n}\n\nexport default BlogsPage;\nexport const query = graphql`\n    query {\n        allFile(filter: {\n            extension: {regex: \"/(jpg)|(jpeg)|(png)/\"},\n            relativePath: {regex: \"/cover-photo/\"}\n        })\n        {\n          edges {\n            node {\n                childrenImageSharp {\n                    gatsbyImageData(\n                      width: 800,\n                      height: 500,\n                      placeholder: DOMINANT_COLOR\n                      formats: [AUTO, WEBP, AVIF]\n                    )\n                  }\n                  relativePath,\n                  id\n            }\n          }\n        }\n    }\n`"],"names":["data","id","title","img","_ref","React","Layout","className","blogs","sort","a","b","localeCompare","map","blog","coverPhoto","allFile","edges","find","edge","node","relativePath","includes","GatsbyImage","image","_coverPhoto$node","childrenImageSharp","gatsbyImageData","alt","Link","to"],"sourceRoot":""}